const mongoose = require('mongoose');

const testMultipleURIs = async () => {
  console.log('üîó Test de connexion MongoDB Atlas - Multiple URIs');
  console.log('==================================================');
  
  // Diff√©rentes variantes de l'URI √† tester
  const uris = [
    // URI originale fournie
    'mongodb+srv://almadinah_admin<db_Almadinah2024>@cluster0.nfzpdun.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',
    
    // URI avec deux points (format standard)
    'mongodb+srv://almadinah_admin:db_Almadinah2024@cluster0.nfzpdun.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',
    
    // URI avec base de donn√©es sp√©cifi√©e
    'mongodb+srv://almadinah_admin:db_Almadinah2024@cluster0.nfzpdun.mongodb.net/almadinah-boutique?retryWrites=true&w=majority&appName=Cluster0',
    
    // URI avec mot de passe simple
    'mongodb+srv://almadinah_admin:Almadinah2024@cluster0.nfzpdun.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',
    
    // URI avec mot de passe simple et base de donn√©es
    'mongodb+srv://almadinah_admin:Almadinah2024@cluster0.nfzpdun.mongodb.net/almadinah-boutique?retryWrites=true&w=majority&appName=Cluster0'
  ];
  
  for (let i = 0; i < uris.length; i++) {
    const uri = uris[i];
    console.log(`\nüß™ Test ${i + 1}/${uris.length}:`);
    console.log('URI:', uri.replace(/:[^:@]+@/, ':***@').replace(/<[^>]+>/, '<***>'));
    
    try {
      await mongoose.connect(uri);
      
      console.log('‚úÖ Connexion r√©ussie !');
      console.log('üìä Base de donn√©es:', mongoose.connection.name);
      console.log('üè† Host:', mongoose.connection.host);
      
      // Test d'√©criture
      const testCollection = mongoose.connection.collection('test');
      await testCollection.insertOne({ 
        test: 'connection', 
        date: new Date(),
        message: 'Test de connexion Almadinah Boutique'
      });
      console.log('‚úÖ Test d\'√©criture r√©ussi !');
      
      // Nettoyage
      await testCollection.deleteOne({ test: 'connection' });
      console.log('‚úÖ Test de suppression r√©ussi !');
      
      await mongoose.connection.close();
      console.log('‚úÖ Connexion ferm√©e proprement');
      console.log('üéâ URI valide trouv√© !');
      
      // Sauvegarder l'URI valide
      const fs = require('fs');
      fs.writeFileSync('valid-mongodb-uri.txt', uri);
      console.log('üíæ URI sauvegard√© dans valid-mongodb-uri.txt');
      
      return;
      
    } catch (error) {
      console.log('‚ùå √âchec:', error.message);
      if (mongoose.connection.readyState === 1) {
        await mongoose.connection.close();
      }
    }
  }
  
  console.log('\n‚ùå Aucun URI valide trouv√©');
  console.log('üí° V√©rifiez votre configuration MongoDB Atlas');
  console.log('üìã Suggestions:');
  console.log('1. V√©rifiez que l\'utilisateur almadinah_admin existe');
  console.log('2. V√©rifiez que le mot de passe est correct');
  console.log('3. V√©rifiez que l\'IP est autoris√©e (0.0.0.0/0)');
  console.log('4. V√©rifiez que l\'utilisateur a les bonnes permissions');
};

testMultipleURIs(); 